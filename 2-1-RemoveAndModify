DELETE A SINGLE DOCUMENT

db.potions.remove(
{"name": "Love"}
)

which will give us a WriteResult({"nRemoved": 1})

DELETE MULTIPLE DOCUMENTS

db.potions.remove (
{"vendor": "Kettlecooked"})

will remove all with same vendor or you can do the following to delete them all

remove()

UPDATING A DOCUMENT

db.potions.update(
{"name": "Love"},   ----Query Parameter
{"$set": {"price": 3.99}}    -----Update Parameter always begin with $

This updates the price in the document but only updates
the first matching document

WriteResult will return 

WriteResult({
                "nMatched": 1,   --number of docs matched
                "nUpserted": 0,  --number of docs created because of the update
                "nModified": 1   --number of docs modified
                })
                
UPDATE WITHOUT AN OPERATOR

This is great for importing or overwriting data!!

db.potions.update(
{"name": "Love"},
{"price": 3.99})

This results in a complete replacedment of our matched document
so the document that matches "name" Love will only have info that says
"price" 3.99

UPDATING MULTIPLE DOCUMENTS

db.potions.update(
{"vendor": "KC"},
{"$set": {"vendor": "Kettlecooked"}})

This will only update the first matching document

db.potions.update(
{"vendor": "KC"},
{"$set": {"vendor": "Kettlecooked"}},
{"multi": true}

Adding multi allows it to perform the update on all matching documents

RECORDNG POTION VIEWS

Whenever user clicks more info on certain potion we want to created
log document with the potion name in account so we can store it in the logs collection

Whenever the user clicks we'll update the log document with a count increment by 1

"count": 1

UPDATE A DOCUMENT'S COUNT

db.logs.update(
{"potion": "Shrinking"},
{$inc": {"count": 1}})  ----will update by a positive or negative value

if the document doesn't exist you can create it with upsert

db.logs.update(
{"potion": "Shrinking"},
{$inc": {"count": 1}},  ----will update by a positive or negative value
{"upsert": true}

ADVANCED MODIFICATIONS

REMOVING FIELDS FROM DOCUMENTS

db.potions.update(
{}, ---will select all the documents in our potions selection
{"$unset": {"color": ""}},  ---removed color field
{"multi": true}

UPDATING  FIELD NAME

db.potions.update(
{},
{"$rename": {"score": "grade"}},
{"multi": true}
)

DILEMMA OF UPDATING AN ARRAY

db.potions.update(
{"ingredients": "secret"},
{"$set": {"ingredients": "42"}}   ---this formula up to here would overwrite the entire array and set it as 42

change it to update that particular array by using dot notation.
"ingredients": ["hippo", "secret", "mouse feet"]
It would be ingredients.1

UPDATING VALUES WITHOUT KNOWING POSITION
You can do this with positional operator
which is a placeholder that will set the proper position for the value specified in the query parameter 

db.potions.update(
{"ingredients": "secret"},
{"$set": {"ingredients.$": 42}}, ---.$ is the positional operator, acts as placeholder  
{"multi": true}

Positional Operator only applies to the first match per document.

UPDATING EMBEDDED VALUES

Use dot notation
{"$set": {"ratings.strength": 5}}

USEFUL UPDATE OPERATORS

$max - Updates if new value is greater than the current value or inserts if empty

$min - Updates if new value is less than the current value or inserts if empty

$mul - Multiplies current field value by specified value.  If empty it inserts 0.

See Operator documentation at http://go.codeschool.com/update-operators

ADVANCED MODIFICATIONS

REMOVING THE FIRST OR LAST VALUE OF AN ARRAY

The $pop operator will remove either the first or last value of array

{"$pop": {"categories": 1}}

-1 removes the first element
1 removes the last element

ADDING VALUES TO END OF AN ARRAY

{"$push": {"categories": "budget"}}

will add budget to the end of array

ADDING UNIQUE VALUES TO AN ARRAY

{"$addToSet": {"categories": "budget"}}

addToSet will add a value to the end of an array 
unless it's already present.

REMOVING VALUES FROM AN ARRAY

{"$pull": {"categories": "tasty"}} ---removes all instances of tasty

pull will remove any instance of a value from an array













